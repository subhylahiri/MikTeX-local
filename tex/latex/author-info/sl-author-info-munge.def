% -*- TeX -*- -*- STY -*- -*- LaTeX3 -*-
%
% Processing inputs -> our form
%
%================================================================================
\ProvidesExplFile {sl-author-info-munge.def} {2017/12/28} {v1.0}
    {process name inputs, etc. for sl-author-info.sty (SL)}
%================================================================================
%\RequirePackage{expl3}
%\RequirePackage{interface3}
%\RequirePackage{xtemplate}
%\RequirePackage{process-name}
%================================================================================
\makeatletter
%================================================================================
\tl_new:N \g__slauth_current_tl
\tl_new:N \g__slauth_contact_label_tl
\prop_new:N \g__slauth_au_prop
%
\prop_new:N \g__slauth_affiliation_def_prop
\prop_new:N \g__slauth_email_def_prop
\prop_new:N \g__slauth_thanks_def_prop
%================================================================================
% Error messages
%================================================================================
\msg_new:nnnn { slauth } { unknown-prop }
  { Unknown~author~key:~'#1' }
  {
    You~have~used~an~invalid~key~:'#1'~for~\g__slauth_current_tl.
    \\ LaTeX~will~ignore~this~key~entirely.
  }
\msg_new:nnnn { slauth } { unknown-cont }
  { Unknown~#2~label:~'#1' }
  {
    You~have~used~an~invalid~label~:'#1'~for~author~'\g__slauth_current_tl'.
    \\ LaTeX~will~ignore~this~#2~for~this~author.
  }
%================================================================================
% Creating data for contact instances

% Keys for an affiliation/email/thanks
%
\keys_define:nn { slauth / contact-new }
{
  label .tl_gset:N = \g__slauth_contact_label_tl ,
  unknown .code:n =
    {
      \tl_if_empty:NTF \l_keys_value_tl
        { \tl_set_eq:NN \g__slauth_contact_label_tl \l_keys_key_tl }
        { \msg_warning:nnx { slauth } { unknown-prop } { \l_keys_key_tl } }
    } ,
}
%--------------------------------------------------------------------------------

% Add a new contact
% #1: contents of contact, token-list
% #2: label, key-value clist
% #3: type of contact, token list
%
\cs_new_protected:Nn \__slauth_contact_new:nnn
{
  \group_begin:
    \tl_gset:Nx \g__slauth_current_tl { #3~'#1' }
    \tl_gclear:N \g__slauth_contact_label_tl
    \keys_set:nn { slauth / contact-new } {#2}
    \tl_if_blank:VTF \g__slauth_contact_label_tl
      { \__slauth_prop_gappend_one:cnn { g__slauth_#3_def_prop } { __nolabel }  {#1} }
      { \prop_gput:cVn { g__slauth_#3_def_prop } \g__slauth_contact_label_tl {#1} }
  \group_end:
}
%================================================================================
% Creating data for authors

% Keep track of entities that have been defined/used

% Note use of a new contact, global
% #1: label of contact, token-list
% #2: type of contact, token-list
%
\cs_new_protected:Nn \__slauth_au_contact_gused:nn
{
  \group_begin:
    \prop_if_in:cnTF { g__slauth_#2_def_prop } {#1}
      {
        \prop_get:cnN { g__slauth_#2_def_prop } {#1} \l_tmpb_tl
        \exp_args:NcnV
          \prop_gput_if_new:Nnn { g__slauth_#2_used_prop } {#1} \l_tmpb_tl
      }
      {
        \tl_if_eq:nnTF {#2} { email }
          { \prop_gput_if_new:cnn { g__slauth_#2_used_prop } {#1} {#1} }
          { \msg_warning:nnnn { slauth } { unknown-cont } {#1} {#2} }
      }
  \group_end:
}
%================================================================================
% Add contacts for one author

% #1: labels clist
% #2: type of contact, token list
%
\cs_new_protected:Nn \__slauth_contact_new_gadd:nn
{
  \seq_set_from_clist:Nn \l_tmpa_seq {#1}
  \__slauth_prop_gappend:NnN \g__slauth_au_prop {#2} \l_tmpa_seq
  \seq_map_inline:Nn \l_tmpa_seq { \__slauth_au_contact_gused:nn {##1} {#2} }
}
\cs_generate_variant:Nn \__slauth_contact_new_gadd:nn { V }

%--------------------------------------------------------------------------------
% Creating data for authors

% Keys for a single author
%
\keys_define:nn { slauth / author-new }
{
  affiliation .code:n =
    { \__slauth_contact_new_gadd:nn {#1} { affiliation } } ,
  email .code:n =
    { \__slauth_contact_new_gadd:nn {#1} { email } } ,
  thanks .code:n =
    { \__slauth_contact_new_gadd:nn {#1} { thanks } } ,
  unknown .code:n =
    {
      \tl_if_empty:NTF \l_keys_value_tl
        { \__slauth_contact_new_gadd:Vn \l_keys_key_tl { affiliation } }
        { \msg_warning:nnx { slauth } { unknown-prop } { \l_keys_key_tl } }
    } ,
}
%--------------------------------------------------------------------------------

% Add an author with properties
% #1: author name, token list
% #2: extra info, keyvals
%
\cs_new_protected:Nn \__slauth_author_new:nn
{
  \group_begin:
    \tl_gset:Nn \g__slauth_current_tl { author~'#1' }
    \prop_gclear:N \g__slauth_au_prop
    \procname_get_parts:Nn \g__slauth_au_prop {#1}
    \keys_set:nn { slauth / author-new } {#2}
    % using prop-list as token-list variable?
    \seq_gput_right:NV \g__slauth_author_seq \g__slauth_au_prop
  \group_end:
}
%================================================================================

\cs_new_protected:Nn \__slauth_munge_authors:N
{
  % Munge authors from holding area -> \g__slauth_author_seq, \g__..._used_list_seq
  \seq_map_inline:Nn #1
    { \__slauth_author_new:nn ##1 } % ##1 = {name}{keys}
  % Delete unneeded data
  \seq_gclear:N #1
  \prop_gclear:N \g__slauth_affiliation_def_prop
  \prop_gclear:N \g__slauth_email_def_prop
  \prop_gclear:N \g__slauth_thanks_def_prop
}
%================================================================================
% Template implementation

\DeclareTemplateCode { people-block } { author-block } {5}
  {
    authors         = \__slauth_block_au:n ,
    affiliations    = \__slauth_block_af:n ,
    emails          = \__slauth_block_em:n ,
    thanks          = \__slauth_block_th:n ,
  }
{
  \group_begin:
    \AssignTemplateKeys
    % Munge authors from holding area -> \g__slauth_author_seq, \g__..._used_prop
    \__slauth_munge_authors:N #1
    % create author block
    \__slauth_block_au:n {#2}
    % add contact info
    \__slauth_block_af:n {#3}
    \__slauth_block_em:n {#4}
    \__slauth_block_th:n {#5}
    % create footer, if needed
    \__slauth_create_foot:
    % Delete unneeded data
    \seq_gclear:N #2
    \prop_gclear:N #3
    \prop_gclear:N #4
    \prop_gclear:N #5
  \group_end:
}
%================================================================================
\endinput
%%
%% End of file
