% -*- TeX -*- -*- STY -*- -*- LaTeX-Expl3 -*-
%%  This uses the package ``delim'' to define custom delimiters
%%
%% Requires packages: expl3, mathtools, MnSymbol
%%
%% All delimiters use \left,\middle,\right by default.
%% They can be changed on a case-by-case basis by providing
%% the size command as an optional argument.
%% Resizing can be turned off by using the starred version.
%% e.g.
%%    \begin{equation}
%%      \brk[\bigg]{\sum_a^b \set*{x^2}{x \in R}}.
%%    \end{equation}
%%
%% Delimiters defined:
%%    \prn{}
%%    \brc{}
%%    \brk{}
%%    \abs{}
%%    \nrm{}
%%    \av{}
%%    \avc{}{}
%%    \ceil{}
%%    \floor{}
%%    \set{}{}
%%    \cond{}{}
%%    \condb{}{}
%%    \bra{}
%%    \ket{}
%%    \braket{}{}
%%    \brackets{}{}{}
%%    \prnfrac{}{}
%%    \brcfrac{}{}
%%    \brkfrac{}{}
%%    \absfrac{}{}
%%    \nrmfrac{}{}
%%    \ceilfrac{}{}
%%    \floorfrac{}{}
%%
%% History: 2018/03/17 v1.0      copied & updated defns from sl_definitions.tex
%%          2021/08/07 v2.0      use expl3
%-------------------------------------------------------------------------------
\RequirePackage{expl3}
\ProvidesExplPackage {sl-delims} {2021-08-07} {2.0} {custom delimiters}
\ExplSyntaxOn
%================================================================================
\RequirePackage{xparse}
\RequirePackage{mathtools}
\RequirePackage{MnSymbol}
\RequirePackage{l3keys2e}
%================================================================================
\msg_new:nnnn { sldelims } { unknown-option }
  { Unknown~option~'#2'! }
  { Known~options:~'#1'. }
% Options
\bool_new:N \g__sldelims_star_bool
\tl_new:N \g_sldelims_placeholder_tl
%--------------------------------------------------------------------------------
% Package options
\keys_define:nn { sldelims }
  {
    nostar .bool_gset_inverse:N = \g__sldelims_star_bool,
    nostar .default:n = true,
    star .bool_gset:N = \g__sldelims_star_bool,
    star .default:n = true,
    star .initial:n = false,
    placeholder .tl_gset:N = \g_sldelims_placeholder_tl,
    placeholder .value_required:n = true,
    placeholder .initial:n = { \:\cdot\: },
    unknown .code:n =
      {
        \msg_warning:nnxx { sldelims } { unknown-option }
          { star, nostar, placeholder } { \exp_not:n {#1} }
          % Valid options, Invalid option given
      },
  }
\ProcessKeysPackageOptions { sldelims }
%================================================================================
\tl_new:N \l__sldelims_csname_tl
\tl_new:N \l__sldelims_argspec_tl
\tl_new:N \l__sldelims_arguse_tl
\tl_new:N \l__sldelims_code_tl
%--------------------------------------------------------------------------------
% Replace omitted argument with placeholder.
% #1: optional argument
\cs_new:Nn \__sldelims_opt:n
  {
    \tl_if_blank:nTF {#1}
      { \g_sldelims_placeholder_tl }
      { #1 }
  }
%--------------------------------------------------------------------------------
% Choose which version of delimiter command to use, swapping starred/unstarred
% #1: Private function that implements deliiters
% #2: Boolean - Was there a star on the public function?
% #3: Optional argument to the public function
% #4: All other arguments to the public function, in braces, inside *one* argument
\cs_new:Nn \__sldelims_choose:Nnnn
  {
    \IfNoValueTF {#3}
      {
        % Assuming xparse and expl3 use the same booleans
        \bool_xor:nnTF {#2} { \g__sldelims_star_bool }
          { #1 #4 }
          { #1* #4 }
      }
      { #1 [#3] #4 }
  }
\cs_generate_variant:Nn \__sldelims_choose:Nnnn { c }
%================================================================================
% Builders
%--------------------------------------------------------------------------------
% Put name of private version of function in tl variable
% #1: Public function
% #2: tl-variable for csname
\cs_new_protected:Nn \__sldelims_private_csname:NN
  {
    \tl_set:Nx #2 { \cs_to_str:N #1 }
    % name of private fn to implement public one
    \tl_put_left:Nn #2 { __slderivs_ }
  }
%--------------------------------------------------------------------------------
% Buld argspec for xparse and argument token list for \__sldelims_choose:Nnnn
% #1: tl-variable for argspec
% #2: tl-variable for argument token list
% #3: Integer - Number of arguments
\cs_new_protected:Nn \__sldelims_build_args:NNn
  {
    % build the argument specification for xparse
    \tl_set:Nn #1 { s~o }
    % build the argument token list for \__sldelims_choose:Nnnn
    \tl_clear:N #2
    \int_step_inline:nn {#3}
      {
        \tl_put_right:Nn #1 { ~m }
        \tl_put_right:Nx #2 { ~{ ######## \int_eval:n{##1 + 2} } }
      }
    % \tl_log:N \l__sldelims_argspec_tl
    % \tl_log:N \l__sldelims_arguse_tl
  }
%--------------------------------------------------------------------------------
% build the code for the public function
% #1: tl-variable for code
% #2: private function that implements delimiters
% #3: additional argument token list
\cs_new_protected:Nn \__sldelims_build_code:NNn
  {
    \tl_set:Nn #1 { \__sldelims_choose:Nnnn #2 }
    \tl_put_right:Nn #1 { {##1} {##2} {#3} }
    % \tl_show:N \l__sldelims_code_tl
  }
\cs_generate_variant:Nn \__sldelims_build_code:NNn { Nc, NcV }
%--------------------------------------------------------------------------------
% build public function
% #1: Public function
% #2: tl-variable for csname of private function that implements delimiters
% #3: Integer - Number of arguments
\cs_new_protected:Nn \__sldelims_build_public:NNn
  {
    % name of private fn to implement public one
    \__sldelims_private_csname:NN #1 #2
    % build the argument specification for xparse & \__sldelims_choose:cnnn
    \__sldelims_build_args:NNn \l__sldelims_argspec_tl \l__sldelims_arguse_tl {#3}
    % build the code for the public function
    \__sldelims_build_code:NcV \l__sldelims_code_tl {#2} \l__sldelims_arguse_tl
    \exp_args:NNVV
    \NewDocumentCommand #1 \l__sldelims_argspec_tl \l__sldelims_code_tl
}
%================================================================================
% Functions to create document commands
%================================================================================
% Like \DeclarePairedDelimiter<...>, but swapping star/no star & default placeholder
%--------------------------------------------------------------------------------
% Define delimiters with one argument, simple insertion
% #1: Command to define
% #2: Left delimiter
% #3: Right delimiter
\cs_new_protected:Nn \__sldelims_new:Nnn
  {
    % Define the public function
    \__sldelims_build_public:NNn #1 \l__sldelims_csname_tl {1}
    % declare the private function
    \exp_args:Nc
    \DeclarePairedDelimiterX  \l__sldelims_csname_tl
      [1] {#2} {#3}
      { \__sldelims_opt:n { ##1 } }
    % \cs_show:c { \l__sldelims_csname_tl }
    % \exp_args:NNnV
    % \NewDocumentCommand #1 { s o m } \l__sldelims_code_tl
    % \cs_log:N #1
    % \cs_log:c { \cs_to_str:N #1 ~code }
  }
%--------------------------------------------------------------------------------
% Define delimiters with multiple argument and code for insertion
% #1: Command to define
% #4: Integer - Number of arguments
% #2: Left delimiter
% #3: Right delimiter
% #5: Code for insertion
\cs_new_protected:Nn \__sldelims_new:Nnnnn
  {
    % Define the public function
    \__sldelims_build_public:NNn #1 \l__sldelims_csname_tl {#4}
    % declare the private function
    \exp_args:Nc
    \DeclarePairedDelimiterX { \l__sldelims_csname_tl }
      [#2] {#3} {#4} {#5}
    % % Define the public function
    % \exp_args:NNVV
    % \NewDocumentCommand #1 \l__sldelims_argspec_tl \l__sldelims_code_tl
  }
\cs_generate_variant:Nn \__sldelims_new:Nnnnn { c }
%--------------------------------------------------------------------------------
% Define delimiters with multiple argument and code for insertion, pre and post
% #1: Command to define
% #2: Integer - Number of arguments
% #3: Pre code
% #4: Left delimiter
% #5: Right delimiter
% #6: Post code
% #7: Code for insertion
\cs_new_protected:Nn \__sldelims_new:Nnnnnnn
  {
    % Define the public function
    \__sldelims_build_public:NNn #1 \l__sldelims_csname_tl {#4}
    % declare the private function
    \exp_args:Nc
    \DeclarePairedDelimiterXPP  { \l__sldelims_csname_tl }
      [#2] {#3} {#4} {#5} {#6} {#7}
  }
%================================================================================
% Define delimited fraction with two arguments, inserted in a \frac{}{}
% #1: Command to define
% #2: Left delimiter
% #3: Right delimiter
\cs_new_protected:Nn \__sldelims_frac:Nnn
  {
    \__sldelims_new:Nnnnn #1 {#2} {#3} {2} { \frac{##1}{##2} }
  }
%================================================================================
% Document commands
%================================================================================
\NewDocumentCommand \given {}
  { \delimsize \mvert \mathopen{} }
\NewDocumentCommand \SetDelimPlaceholder { m }
  { \tl_gset:Nn \g_sldelims_placeholder_tl {#1} }
% brackets etc.
\__sldelims_new:Nnn \prn { \lparen } { \rparen }
\__sldelims_new:Nnn \brc { \lbrace } { \rbrace }
\__sldelims_new:Nnn \brk { \lbrack } { \rbrack }
\__sldelims_new:Nnn \abs { \lvert } { \rvert }
\__sldelims_new:Nnn \nrm { \lVert } { \rVert }
\__sldelims_new:Nnn \av { \langle } { \rangle }
\__sldelims_new:Nnn \ceil { \lceil } { \rceil }
\__sldelims_new:Nnn \floor { \lfloor } { \rfloor }
\__sldelims_new:Nnnnn \avc {2} { \langle } { \rangle }
  { \__sldelims_opt:n{#1} \given \__sldelims_opt:n{#2} }
%\newenvironment{cases}{\dleft\{\begin{aligned}}{\end{aligned}\dright.}
%
% Sets
\__sldelims_new:Nnnnn \set {2} { \lbrace } { \rbrace }
  { \__sldelims_opt:n{#1} \given \__sldelims_opt:n{#2} }
\__sldelims_new:Nnnnn \cond {2} { \lparen } { \rparen }
  { \__sldelims_opt:n{#1} \given \__sldelims_opt:n{#2} }
\__sldelims_new:Nnnnn \condb {2} { \lbrack } { \rbrack }
  { \__sldelims_opt:n{#1} \given \__sldelims_opt:n{#2} }
%
% QM Dirac notation
\__sldelims_new:Nnn \bra { \langle } { \rvert }
\__sldelims_new:Nnn \ket { \lvert } { \rangle }
\__sldelims_new:Nnnnn \braket {2} { \langle } { \rangle }
  { \__sldelims_opt:n{#1} \given \__sldelims_opt:n{#2} }
\__sldelims_new:Nnnnn \brackets {3} { \langle } { \rangle }
  {
    \__sldelims_opt:n{#1} \given
    \__sldelims_opt:n{#2} \given
    \__sldelims_opt:n{#3}
  }
%
% Bracketed fractions
\__sldelims_frac:Nnn \prnfrac { \lparen } { \rparen }
\__sldelims_frac:Nnn \brcfrac { \lbrace } { \rbrace }
\__sldelims_frac:Nnn \brkfrac { \lbrack } { \rbrack }
\__sldelims_frac:Nnn \absfrac { \lvert } { \rvert }
\__sldelims_frac:Nnn \nrmfrac { \lVert } { \rVert }
\__sldelims_frac:Nnn \avfrac { \langle } { \rangle }
\__sldelims_frac:Nnn \ceilfrac { \lceil } { \rceil }
\__sldelims_frac:Nnn \floorfrac { \lfloor } { \rfloor }
%
% Evaluate at
\__sldelims_new:Nnnnnnn \evalat {2}
  {} {.} {\rvert} { \c_math_subscript_token {#2} }
  { \__sldelims_opt:n{#1} }
%================================================================================
\ExplSyntaxOff
\endinput